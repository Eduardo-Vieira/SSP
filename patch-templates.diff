From 400eb2cb345880fdf633948a4768baf755ef693a Mon Sep 17 00:00:00 2001
From: Jim Stanley <jstanley@unicon.net>
Date: Wed, 23 Oct 2013 11:02:38 -0700
Subject: [PATCH] SSP-1838 Map Plan Template now has own template for
 displaying a Matrix Output.

---
 .../jasig/ssp/model/reference/MessageTemplate.java |   3 +
 .../org/jasig/ssp/service/AbstractPlanService.java |  10 +-
 .../java/org/jasig/ssp/service/PlanService.java    |   6 +-
 .../org/jasig/ssp/service/TemplateService.java     |   4 +-
 .../ssp/service/impl/AbstractPlanServiceImpl.java  |  28 ++--
 .../jasig/ssp/service/impl/PlanServiceImpl.java    |  20 ++-
 .../ssp/service/impl/TemplateServiceImpl.java      |  47 ++++++-
 .../service/reference/MessageTemplateService.java  |  10 +-
 .../reference/impl/MessageTemplateServiceImpl.java |  27 ++--
 .../ssp/transferobject/AbstractPlanOutputTO.java   |  19 ++-
 .../org/jasig/ssp/transferobject/PlanOutputTO.java |  27 ++++
 .../jasig/ssp/transferobject/TemplateOutputTO.java |  33 ++++-
 .../org/jasig/ssp/transferobject/TemplateTO.java   |   2 -
 .../AbstractMessageTemplateMapPrintParamsTO.java   |  67 ++++++++++
 .../reference/MessageTemplatePlanPrintParams.java  |  11 ++
 .../MessageTemplatePlanTemplatePrintParamsTO.java  |  42 ++++++
 .../java/org/jasig/ssp/web/api/PlanController.java |   6 +-
 .../org/jasig/ssp/web/api/TemplateController.java  |   3 +-
 .../org/jasig/ssp/database/changesets/000083.xml   | 143 +++++++++++++++++++++
 .../org/jasig/ssp/database/masterChangeLog.xml     |   1 +
 .../map/SemesterPanelContainerViewController.js    |   8 +-
 src/main/webapp/app/service/MapPlanService.js      |   2 +-
 .../jasig/ssp/service/impl/PlanServiceTest.java    |   3 +-
 23 files changed, 467 insertions(+), 55 deletions(-)
 create mode 100644 src/main/java/org/jasig/ssp/transferobject/reference/AbstractMessageTemplateMapPrintParamsTO.java
 create mode 100644 src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanPrintParams.java
 create mode 100644 src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanTemplatePrintParamsTO.java
 create mode 100644 src/main/resources/org/jasig/ssp/database/changesets/000083.xml

diff --git a/src/main/java/org/jasig/ssp/model/reference/MessageTemplate.java b/src/main/java/org/jasig/ssp/model/reference/MessageTemplate.java
index 38e3f0a..74a51a7 100644
--- a/src/main/java/org/jasig/ssp/model/reference/MessageTemplate.java
+++ b/src/main/java/org/jasig/ssp/model/reference/MessageTemplate.java
@@ -71,6 +71,9 @@ public class MessageTemplate
 	public static final UUID OUTPUT_MAP_PLAN_MATRIX_ID = UUID
 			.fromString("aa2e0356-46df-4acd-ab3e-b96a6aa943d3");
 	
+	public static final UUID OUTPUT_TEMPLATE_PLAN_MATRIX_ID = UUID
+			.fromString("bcc180b0-3a8b-11e3-aa6e-0800200c9a66");
+	
 	public static final UUID OUTPUT_MAP_PLAN_FULL_ID = UUID
 			.fromString("df47a4b0-b666-11e2-9e96-0800200c9a66");
 
diff --git a/src/main/java/org/jasig/ssp/service/AbstractPlanService.java b/src/main/java/org/jasig/ssp/service/AbstractPlanService.java
index 5af4baf..4130e59 100644
--- a/src/main/java/org/jasig/ssp/service/AbstractPlanService.java
+++ b/src/main/java/org/jasig/ssp/service/AbstractPlanService.java
@@ -27,8 +27,11 @@ import org.jasig.ssp.model.Person;
 import org.jasig.ssp.model.SubjectAndBody;
 import org.jasig.ssp.transferobject.AbstractPlanOutputTO;
 import org.jasig.ssp.transferobject.AbstractPlanTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
 
-public interface AbstractPlanService<T extends AbstractPlan,TO extends AbstractPlanTO<T>,TOO extends AbstractPlanOutputTO<T,TO>> extends AuditableCrudService<T> {
+public interface AbstractPlanService<T extends AbstractPlan,TO extends AbstractPlanTO<T>,
+TOO extends AbstractPlanOutputTO<T,TO>,
+TOOMT extends AbstractMessageTemplateMapPrintParamsTO<TOO, T,TO>> extends AuditableCrudService<T> {
 
 	static final public String OUTPUT_FORMAT_MATRIX = "matrixFormat";
 	
@@ -40,10 +43,11 @@ public interface AbstractPlanService<T extends AbstractPlan,TO extends AbstractP
 	public T copyAndSave(T model, Person newOwner) throws CloneNotSupportedException;
 
 	SubjectAndBody createOutput(TOO plan) throws ObjectNotFoundException;
-
-	SubjectAndBody createMatrixOutput(TO plan) throws ObjectNotFoundException;
 	
 	SubjectAndBody createFullOutput(TOO plan) throws ObjectNotFoundException;
 	
 	public TO validate(TO model) throws ObjectNotFoundException;
+
+	SubjectAndBody createMatrixOutput(TOOMT outputPlan)
+			throws ObjectNotFoundException;
 }
\ No newline at end of file
diff --git a/src/main/java/org/jasig/ssp/service/PlanService.java b/src/main/java/org/jasig/ssp/service/PlanService.java
index 087966f..634f377 100644
--- a/src/main/java/org/jasig/ssp/service/PlanService.java
+++ b/src/main/java/org/jasig/ssp/service/PlanService.java
@@ -27,17 +27,21 @@ import org.jasig.ssp.model.Plan;
 import org.jasig.ssp.model.SubjectAndBody;
 import org.jasig.ssp.transferobject.PlanOutputTO;
 import org.jasig.ssp.transferobject.PlanTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
+import org.jasig.ssp.transferobject.reference.MessageTemplatePlanPrintParams;
 import org.jasig.ssp.transferobject.reports.PlanAdvisorCountTO;
 import org.jasig.ssp.transferobject.reports.PlanCourseCountTO;
 import org.jasig.ssp.transferobject.reports.PlanStudentStatusTO;
 import org.jasig.ssp.transferobject.reports.SearchPlanTO;
 import org.jasig.ssp.util.sort.PagingWrapper;
 import org.jasig.ssp.util.sort.SortingAndPaging;
+import org.springframework.transaction.annotation.Transactional;
 
 /**
  * Person service
  */
-public interface PlanService extends AbstractPlanService<Plan,PlanTO,PlanOutputTO> {
+public interface PlanService extends AbstractPlanService<Plan,PlanTO,
+PlanOutputTO, MessageTemplatePlanPrintParams> {
 
 	Plan copyAndSave(Plan plan) throws CloneNotSupportedException;
 
diff --git a/src/main/java/org/jasig/ssp/service/TemplateService.java b/src/main/java/org/jasig/ssp/service/TemplateService.java
index 4626613..93f8e24 100644
--- a/src/main/java/org/jasig/ssp/service/TemplateService.java
+++ b/src/main/java/org/jasig/ssp/service/TemplateService.java
@@ -21,10 +21,12 @@ package org.jasig.ssp.service;
 import org.jasig.ssp.model.Template;
 import org.jasig.ssp.transferobject.TemplateOutputTO;
 import org.jasig.ssp.transferobject.TemplateTO;
+import org.jasig.ssp.transferobject.reference.MessageTemplatePlanTemplatePrintParamsTO;
 import org.jasig.ssp.util.sort.PagingWrapper;
 import org.jasig.ssp.util.sort.SortingAndPaging;
 
-public interface TemplateService extends AbstractPlanService<Template,TemplateTO,TemplateOutputTO> {
+public interface TemplateService extends AbstractPlanService<Template,TemplateTO,
+TemplateOutputTO , MessageTemplatePlanTemplatePrintParamsTO> {
 
 	PagingWrapper<Template> getAll(SortingAndPaging createForSingleSortWithPaging,
 			Boolean status, String divisionCode, String programCode, String departmentCode);
diff --git a/src/main/java/org/jasig/ssp/service/impl/AbstractPlanServiceImpl.java b/src/main/java/org/jasig/ssp/service/impl/AbstractPlanServiceImpl.java
index f78054d..e734528 100644
--- a/src/main/java/org/jasig/ssp/service/impl/AbstractPlanServiceImpl.java
+++ b/src/main/java/org/jasig/ssp/service/impl/AbstractPlanServiceImpl.java
@@ -19,6 +19,8 @@
 package org.jasig.ssp.service.impl;
 
 import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
@@ -54,6 +56,7 @@ import org.jasig.ssp.transferobject.AbstractPlanOutputTO;
 import org.jasig.ssp.transferobject.AbstractPlanTO;
 import org.jasig.ssp.transferobject.PlanTO;
 import org.jasig.ssp.transferobject.TermNoteTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.transaction.annotation.Transactional;
 
@@ -65,9 +68,10 @@ import com.google.common.collect.Lists;
  */
 @Transactional
 public  abstract class AbstractPlanServiceImpl<T extends AbstractPlan,
-		TO extends AbstractPlanTO<T>, TOO extends AbstractPlanOutputTO<T,TO>>
+		TO extends AbstractPlanTO<T>, TOO extends AbstractPlanOutputTO<T,TO>,
+		TOOMT extends AbstractMessageTemplateMapPrintParamsTO<TOO, T,TO>>
 	extends  AbstractAuditableCrudService<T>
-	implements AbstractPlanService<T,TO, TOO> {
+	implements AbstractPlanService<T,TO, TOO, TOOMT> {
 
 	@Autowired
 	private SecurityService securityService;
@@ -129,19 +133,16 @@ public  abstract class AbstractPlanServiceImpl<T extends AbstractPlan,
 	
 	@Override
 	@Transactional(readOnly=true)
-	public SubjectAndBody createMatrixOutput(final TO outputPlan) throws ObjectNotFoundException {
-		
-		//TODO eventually find a better  way to set the student when in context
-		Person student = outputPlan instanceof PlanTO ?  personService.get(UUID.fromString(((PlanTO)outputPlan).getPersonId())) : null;
-		Person owner = getPersonService().get(UUID.fromString(outputPlan.getOwnerId()));
-		
-		
-		List<TermCourses<T,TO>> courses = collectTermCourses(outputPlan);
-		Float totalPlanCreditHours = calculateTotalPlanHours(courses);
+	public SubjectAndBody createMatrixOutput(final TOOMT outputPlan) throws ObjectNotFoundException {
+
+		List<TermCourses<T,TO>> courses = collectTermCourses(outputPlan.getOutputPlan().getNonOutputTO());
+		outputPlan.setTermCourses(courses);
+		outputPlan.setTotalPlanCreditHours(calculateTotalPlanHours(courses));
 		 
-		SubjectAndBody subjectAndBody = getMessageTemplateService().createMapPlanMatrixOutput(student, owner, outputPlan, totalPlanCreditHours, courses, getInstitutionName());
+		SubjectAndBody subjectAndBody = getMessageTemplateService().createMapPlanMatrixOutput(outputPlan);
 		return subjectAndBody;
 	}
+	
 	@Override
 	@Transactional(readOnly=true)
 	public SubjectAndBody createFullOutput(TOO planOutput) throws ObjectNotFoundException
@@ -341,8 +342,9 @@ public  abstract class AbstractPlanServiceImpl<T extends AbstractPlan,
 				semesterCourses.get(course.getTermCode()).addCourse(course);
 			}
 		}
+				
 		List<TermCourses<T,TO>> courses =  Lists.newArrayList(semesterCourses.values());
-	
+			
 		return courses;
 	}
 	
diff --git a/src/main/java/org/jasig/ssp/service/impl/PlanServiceImpl.java b/src/main/java/org/jasig/ssp/service/impl/PlanServiceImpl.java
index 75be2fa..5af9e6f 100644
--- a/src/main/java/org/jasig/ssp/service/impl/PlanServiceImpl.java
+++ b/src/main/java/org/jasig/ssp/service/impl/PlanServiceImpl.java
@@ -37,6 +37,8 @@ import org.jasig.ssp.service.reference.ConfigService;
 import org.jasig.ssp.transferobject.AbstractPlanOutputTO;
 import org.jasig.ssp.transferobject.PlanOutputTO;
 import org.jasig.ssp.transferobject.PlanTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
+import org.jasig.ssp.transferobject.reference.MessageTemplatePlanPrintParams;
 import org.jasig.ssp.transferobject.reports.PlanAdvisorCountTO;
 import org.jasig.ssp.transferobject.reports.PlanCourseCountTO;
 import org.jasig.ssp.transferobject.reports.PlanStudentStatusTO;
@@ -54,7 +56,7 @@ import org.springframework.transaction.annotation.Transactional;
  */
 @Service
 @Transactional
-public class PlanServiceImpl extends AbstractPlanServiceImpl<Plan,PlanTO,PlanOutputTO>
+public class PlanServiceImpl extends AbstractPlanServiceImpl<Plan,PlanTO,PlanOutputTO,MessageTemplatePlanPrintParams>
 		implements PlanService {
 
 	@Autowired
@@ -102,7 +104,20 @@ public class PlanServiceImpl extends AbstractPlanServiceImpl<Plan,PlanTO,PlanOut
 		SubjectAndBody output = null;
 
 		if(planOutputDataTO.getOutputFormat().equals(PlanService.OUTPUT_FORMAT_MATRIX)) {
-			output = createMatrixOutput(planOutputDataTO.getNonOutputTO());
+			MessageTemplatePlanPrintParams params = new MessageTemplatePlanPrintParams();
+			params.setMessageTemplateId(planOutputDataTO.getMessageTemplateMatrixId());
+			params.setOutputPlan(planOutputDataTO);
+			params.setInstitutionName(getInstitutionName());
+			if(StringUtils.isNotBlank(planOutputDataTO.getPlan().getOwnerId())){
+				params.setOwner(personService.get(
+						UUID.fromString(planOutputDataTO.getPlan().getOwnerId())));
+			}
+			
+			if(StringUtils.isNotBlank(planOutputDataTO.getPlan().getPersonId())){
+				params.setStudent(personService.get(
+						UUID.fromString(planOutputDataTO.getPlan().getPersonId())));
+			}
+			output = createMatrixOutput(params);
 		} else{
 			UUID personID = UUID.fromString(planOutputDataTO.getPlan().getPersonId());
 			String schoolId = personService.get(personID).getSchoolId();
@@ -113,6 +128,7 @@ public class PlanServiceImpl extends AbstractPlanServiceImpl<Plan,PlanTO,PlanOut
 
 		return output;
 	}
+	
 
 	@Override
 	public PagingWrapper<Plan> getAllForStudent(
diff --git a/src/main/java/org/jasig/ssp/service/impl/TemplateServiceImpl.java b/src/main/java/org/jasig/ssp/service/impl/TemplateServiceImpl.java
index cbc8fa3..7d0caec 100644
--- a/src/main/java/org/jasig/ssp/service/impl/TemplateServiceImpl.java
+++ b/src/main/java/org/jasig/ssp/service/impl/TemplateServiceImpl.java
@@ -24,12 +24,17 @@ import org.apache.commons.lang.StringUtils;
 import org.jasig.ssp.dao.TemplateDao;
 import org.jasig.ssp.model.SubjectAndBody;
 import org.jasig.ssp.model.Template;
-import org.jasig.ssp.model.reference.Config;
 import org.jasig.ssp.service.ObjectNotFoundException;
+import org.jasig.ssp.service.PersonService;
 import org.jasig.ssp.service.TemplateService;
-import org.jasig.ssp.service.reference.ConfigService;
+import org.jasig.ssp.service.external.ExternalDepartmentService;
+import org.jasig.ssp.service.external.ExternalDivisionService;
+import org.jasig.ssp.service.external.ExternalProgramService;
 import org.jasig.ssp.transferobject.TemplateOutputTO;
 import org.jasig.ssp.transferobject.TemplateTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
+import org.jasig.ssp.transferobject.reference.MessageTemplatePlanPrintParams;
+import org.jasig.ssp.transferobject.reference.MessageTemplatePlanTemplatePrintParamsTO;
 import org.jasig.ssp.util.sort.PagingWrapper;
 import org.jasig.ssp.util.sort.SortingAndPaging;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -43,11 +48,24 @@ import org.springframework.transaction.annotation.Transactional;
  */
 @Service
 @Transactional
-public  class TemplateServiceImpl extends AbstractPlanServiceImpl<Template,TemplateTO,TemplateOutputTO> implements TemplateService {
+public  class TemplateServiceImpl extends AbstractPlanServiceImpl<Template,
+TemplateTO,TemplateOutputTO, MessageTemplatePlanTemplatePrintParamsTO> implements TemplateService {
 
 	@Autowired
 	private transient TemplateDao dao;
 	
+	@Autowired
+	private PersonService personService;
+	
+	@Autowired
+	private transient ExternalDepartmentService departmentService;
+	
+	@Autowired
+	private transient ExternalDivisionService divisionService;
+	
+	@Autowired
+	private transient ExternalProgramService programService;
+	
 	@Override
 	protected TemplateDao getDao() {
 		return dao;
@@ -64,9 +82,28 @@ public  class TemplateServiceImpl extends AbstractPlanServiceImpl<Template,Templ
 	public SubjectAndBody createOutput(TemplateOutputTO templateOutputDataTO) throws ObjectNotFoundException {
 
 		SubjectAndBody output = null;
-
+		
+		MessageTemplatePlanTemplatePrintParamsTO params = new MessageTemplatePlanTemplatePrintParamsTO();
+		params.setMessageTemplateId(templateOutputDataTO.getMessageTemplateMatrixId());
+		params.setOutputPlan(templateOutputDataTO);
+		
+		TemplateTO to = templateOutputDataTO.getNonOutputTO();
+		if(StringUtils.isNotBlank(to.getDepartmentCode()))
+			params.setDepartmentName(departmentService.getByCode(to.getDepartmentCode()).getName());
+		if(StringUtils.isNotBlank(to.getDivisionCode()))
+			params.setDivisionName(divisionService.getByCode(to.getDivisionCode()).getName());
+		if(StringUtils.isNotBlank(to.getProgramCode()))
+			params.setProgramName(programService.getByCode(to.getProgramCode()).getName());
+		
+		params.setInstitutionName(getInstitutionName());
+		
+		if(StringUtils.isNotBlank(templateOutputDataTO.getPlan().getOwnerId())){
+			params.setOwner(personService.get(
+					UUID.fromString(templateOutputDataTO.getPlan().getOwnerId())));
+		}
+		
 		if(templateOutputDataTO.getOutputFormat().equals(TemplateService.OUTPUT_FORMAT_MATRIX)) {
-			output = createMatrixOutput(templateOutputDataTO.getNonOutputTO());
+			output = createMatrixOutput(params);
 		} else{
 			output = createFullOutput(templateOutputDataTO);
 		}
diff --git a/src/main/java/org/jasig/ssp/service/reference/MessageTemplateService.java b/src/main/java/org/jasig/ssp/service/reference/MessageTemplateService.java
index 38da7e8..75651e2 100644
--- a/src/main/java/org/jasig/ssp/service/reference/MessageTemplateService.java
+++ b/src/main/java/org/jasig/ssp/service/reference/MessageTemplateService.java
@@ -18,14 +18,12 @@
  */
 package org.jasig.ssp.service.reference;
 
-import java.math.BigDecimal;
 import java.util.List;
 import java.util.Map;
 
 import org.jasig.ssp.model.AbstractPlan;
 import org.jasig.ssp.model.EarlyAlert;
 import org.jasig.ssp.model.Person;
-import org.jasig.ssp.model.Plan;
 import org.jasig.ssp.model.SubjectAndBody;
 import org.jasig.ssp.model.Task;
 import org.jasig.ssp.model.TermCourses;
@@ -34,9 +32,8 @@ import org.jasig.ssp.service.ReferenceService;
 import org.jasig.ssp.transferobject.AbstractPlanOutputTO;
 import org.jasig.ssp.transferobject.AbstractPlanTO;
 import org.jasig.ssp.transferobject.GoalTO;
-import org.jasig.ssp.transferobject.PlanOutputTO;
-import org.jasig.ssp.transferobject.PlanTO;
 import org.jasig.ssp.transferobject.TaskTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
 
 /**
  * MessageTemplate service
@@ -74,9 +71,8 @@ public interface MessageTemplateService extends
 	SubjectAndBody createEarlyAlertResponseToFacultyMessage(
 			Map<String, Object> messageParams);
 	
-	public <T extends AbstractPlan,TO extends AbstractPlanTO<T>> SubjectAndBody createMapPlanMatrixOutput(final Person student, final Person owner, final TO plan, final Float totalPlanCreditHours,
-			final List<TermCourses<T, TO>> courses,
-			String institutionName);
+	public <TOO extends AbstractPlanOutputTO<T, TO>, T extends AbstractPlan,TO extends AbstractPlanTO<T>> SubjectAndBody createMapPlanMatrixOutput(
+			AbstractMessageTemplateMapPrintParamsTO<TOO, T, TO> params);
 	
 	public  <T extends AbstractPlan,TO extends AbstractPlanTO<T>> SubjectAndBody createMapPlanFullOutput(final Person student, final Person owner, final AbstractPlanOutputTO<T,TO> plan, 
 			final Float totalPlanCreditHours,
diff --git a/src/main/java/org/jasig/ssp/service/reference/impl/MessageTemplateServiceImpl.java b/src/main/java/org/jasig/ssp/service/reference/impl/MessageTemplateServiceImpl.java
index f9f61e0..3c3f936 100644
--- a/src/main/java/org/jasig/ssp/service/reference/impl/MessageTemplateServiceImpl.java
+++ b/src/main/java/org/jasig/ssp/service/reference/impl/MessageTemplateServiceImpl.java
@@ -42,6 +42,7 @@ import org.jasig.ssp.transferobject.AbstractPlanOutputTO;
 import org.jasig.ssp.transferobject.AbstractPlanTO;
 import org.jasig.ssp.transferobject.GoalTO;
 import org.jasig.ssp.transferobject.TaskTO;
+import org.jasig.ssp.transferobject.reference.AbstractMessageTemplateMapPrintParamsTO;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Service;
 import org.springframework.transaction.annotation.Transactional;
@@ -238,21 +239,20 @@ public class MessageTemplateServiceImpl extends
 				messageParams);
 	}
 	
+	
 	@Override
-	public <T extends AbstractPlan,TO extends AbstractPlanTO<T>> SubjectAndBody createMapPlanMatrixOutput(final Person student, final Person owner, TO plan, 
-			final Float totalPlanCreditHours,
-			final List<TermCourses<T, TO>> termCourses,
-			final String institutionName) {
+	public <TOO extends AbstractPlanOutputTO<T, TO>, T extends AbstractPlan,TO extends AbstractPlanTO<T>> SubjectAndBody createMapPlanMatrixOutput(
+			AbstractMessageTemplateMapPrintParamsTO<TOO, T, TO> params) {
 		
 		final Map<String, Object> messageParams =  addParamsToMapPlan(
-				student,
-				owner, 
-				plan, 
-				totalPlanCreditHours,
-				termCourses,
-				institutionName);
-		 
-		return populateFromTemplate(MessageTemplate.OUTPUT_MAP_PLAN_MATRIX_ID, messageParams);
+				params.getStudent(), 
+				params.getOwner(), 
+				params.getOutputPlan().getNonOutputTO(),
+				params.getTotalPlanCreditHours(),
+				params.getTermCourses(),
+				params.getInstitutionName());
+		messageParams.put("printParams", params);
+		return populateFromTemplate(params.getMessageTemplateId(), messageParams);
 	}
 	
 	@Override
@@ -310,6 +310,9 @@ public class MessageTemplateServiceImpl extends
 		final Map<String, Object> messageParams = new HashMap<String, Object>(); 
 		
 		messageParams.put("title", plan.getName());
+		messageParams.put("plan", plan);
+		SimpleDateFormat formatter = new SimpleDateFormat("MMM-dd-yyyy");
+		messageParams.put("lastModified", formatter.format(plan.getModifiedDate()));
 		messageParams.put("planContactNotes", plan.getContactNotes());
 		messageParams.put("planStudentNotes", plan.getStudentNotes());
 		messageParams.put("termCourses", termCourses);
diff --git a/src/main/java/org/jasig/ssp/transferobject/AbstractPlanOutputTO.java b/src/main/java/org/jasig/ssp/transferobject/AbstractPlanOutputTO.java
index 5cc75f8..d4ebfb3 100644
--- a/src/main/java/org/jasig/ssp/transferobject/AbstractPlanOutputTO.java
+++ b/src/main/java/org/jasig/ssp/transferobject/AbstractPlanOutputTO.java
@@ -18,13 +18,16 @@
  */
 package org.jasig.ssp.transferobject;
 
+import java.util.UUID;
+
 import org.jasig.ssp.model.AbstractPlan;
 import org.jasig.ssp.model.external.ExternalStudentFinancialAid;
 import org.jasig.ssp.model.external.ExternalStudentTranscript;
+import org.jasig.ssp.model.reference.MessageTemplate;
 
 public abstract class AbstractPlanOutputTO<P extends AbstractPlan,T extends AbstractPlanTO<P>> {
 
-
+	// This is a minimal template that will work for both plan and template. Not optimized.
 	private T plan;
 	private String outputFormat;
     private Boolean includeCourseDescription;
@@ -138,4 +141,18 @@ public abstract class AbstractPlanOutputTO<P extends AbstractPlan,T extends Abst
 	public void setGpa(ExternalStudentTranscript gpa) {
 		this.gpa = gpa;
 	}
+	
+	public UUID getMessageTemplateMatrixId() {
+		return null;
+	}
+
+	public void setMessageTemplateId(UUID messageTemplateMatrixId) {
+	}
+	
+	public UUID getMessageTemplateFullId() {
+		return null;
+	}
+
+	public void setMessageTemplateFullId(UUID messageTemplateFullId) {
+	}
 }
diff --git a/src/main/java/org/jasig/ssp/transferobject/PlanOutputTO.java b/src/main/java/org/jasig/ssp/transferobject/PlanOutputTO.java
index 9a717f9..4a6b62a 100644
--- a/src/main/java/org/jasig/ssp/transferobject/PlanOutputTO.java
+++ b/src/main/java/org/jasig/ssp/transferobject/PlanOutputTO.java
@@ -18,7 +18,10 @@
  */
 package org.jasig.ssp.transferobject;
 
+import java.util.UUID;
+
 import org.jasig.ssp.model.Plan;
+import org.jasig.ssp.model.reference.MessageTemplate;
 
 /** PlanOutputTO is strictly for bringing back data from client
  * for printing and email purposes
@@ -27,6 +30,10 @@ import org.jasig.ssp.model.Plan;
  *
  */
 public class PlanOutputTO extends AbstractPlanOutputTO<Plan,PlanTO>{
+	
+	private UUID messageTemplateMatrixId = MessageTemplate.OUTPUT_MAP_PLAN_MATRIX_ID;
+	
+	private UUID messageTemplateFullId = MessageTemplate.OUTPUT_MAP_PLAN_FULL_ID;
     
     public PlanOutputTO(){
     	super();
@@ -40,4 +47,24 @@ public class PlanOutputTO extends AbstractPlanOutputTO<Plan,PlanTO>{
     	return getNonOutputTO();
     }
     
+    @Override
+	public UUID getMessageTemplateMatrixId() {
+		return messageTemplateMatrixId;
+	}
+
+    @Override
+	public void setMessageTemplateId(UUID messageTemplateMatrixId) {
+		this.messageTemplateMatrixId = messageTemplateMatrixId;
+	}
+	
+    @Override
+	public UUID getMessageTemplateFullId() {
+		return messageTemplateFullId;
+	}
+
+    @Override
+	public void setMessageTemplateFullId(UUID messageTemplateFullId) {
+		this.messageTemplateFullId = messageTemplateFullId;
+	}
+    
 }
diff --git a/src/main/java/org/jasig/ssp/transferobject/TemplateOutputTO.java b/src/main/java/org/jasig/ssp/transferobject/TemplateOutputTO.java
index 223c255..78e891c 100644
--- a/src/main/java/org/jasig/ssp/transferobject/TemplateOutputTO.java
+++ b/src/main/java/org/jasig/ssp/transferobject/TemplateOutputTO.java
@@ -18,7 +18,10 @@
  */
 package org.jasig.ssp.transferobject;
 
+import java.util.UUID;
+
 import org.jasig.ssp.model.Template;
+import org.jasig.ssp.model.reference.MessageTemplate;
 
 /** PlanOutputTO is strictly for bringing back data from client
  * for printing and email purposes
@@ -27,17 +30,43 @@ import org.jasig.ssp.model.Template;
  *
  */
 public class TemplateOutputTO extends AbstractPlanOutputTO<Template, TemplateTO> {
-    
-    
+	
+	private UUID messageTemplateMatrixId = MessageTemplate.OUTPUT_TEMPLATE_PLAN_MATRIX_ID;
+	
+	private UUID messageTemplateFullId = MessageTemplate.OUTPUT_TEMPLATE_PLAN_MATRIX_ID;
+	
+	private TemplateTO plan;
+	
     public TemplateOutputTO(){
     	super();
     }
+
     
     public void setPlan(TemplateTO plan){
+    	this.plan = plan;
     	setNonOuputTO(plan);
     }
    
     public TemplateTO getPlan() {
     	return getNonOutputTO();
     }
+
+    @Override
+	public UUID getMessageTemplateMatrixId() {
+		return messageTemplateMatrixId;
+	}
+    @Override
+	public void setMessageTemplateId(UUID messageTemplateMatrixId) {
+		this.messageTemplateMatrixId = messageTemplateMatrixId;
+	}
+    @Override
+	public UUID getMessageTemplateFullId() {
+		return messageTemplateFullId;
+	}
+
+    @Override
+	public void setMessageTemplateFullId(UUID messageTemplateFullId) {
+		this.messageTemplateFullId = messageTemplateFullId;
+	}
+	
 }
diff --git a/src/main/java/org/jasig/ssp/transferobject/TemplateTO.java b/src/main/java/org/jasig/ssp/transferobject/TemplateTO.java
index 3e657c5..366eeb2 100644
--- a/src/main/java/org/jasig/ssp/transferobject/TemplateTO.java
+++ b/src/main/java/org/jasig/ssp/transferobject/TemplateTO.java
@@ -125,6 +125,4 @@ public class TemplateTO extends AbstractPlanTO<Template> {
 		return templateCourses;
 	}
 
-
-
 }
\ No newline at end of file
diff --git a/src/main/java/org/jasig/ssp/transferobject/reference/AbstractMessageTemplateMapPrintParamsTO.java b/src/main/java/org/jasig/ssp/transferobject/reference/AbstractMessageTemplateMapPrintParamsTO.java
new file mode 100644
index 0000000..88b0d3a
--- /dev/null
+++ b/src/main/java/org/jasig/ssp/transferobject/reference/AbstractMessageTemplateMapPrintParamsTO.java
@@ -0,0 +1,67 @@
+package org.jasig.ssp.transferobject.reference;
+
+import java.util.List;
+import java.util.UUID;
+
+import org.jasig.ssp.model.AbstractPlan;
+import org.jasig.ssp.model.Person;
+import org.jasig.ssp.model.TermCourses;
+import org.jasig.ssp.transferobject.AbstractPlanOutputTO;
+import org.jasig.ssp.transferobject.AbstractPlanTO;
+
+public class AbstractMessageTemplateMapPrintParamsTO<TOO extends AbstractPlanOutputTO<T,TO>, T extends AbstractPlan,TO extends AbstractPlanTO<T>> {
+
+	Float totalPlanCreditHours;
+	List<TermCourses<T, TO>> termCourses;
+	String institutionName;
+	UUID messageTemplateId;
+	Person owner;
+	Person student;
+	
+	AbstractPlanOutputTO<T,TO> outputPlan;
+	
+	public AbstractPlanOutputTO<T, TO> getOutputPlan() {
+		return outputPlan;
+	}
+	public void setOutputPlan(AbstractPlanOutputTO<T, TO> outputPlan) {
+		this.outputPlan = outputPlan;
+	}
+	
+	public Float getTotalPlanCreditHours() {
+		return totalPlanCreditHours;
+	}
+	public void setTotalPlanCreditHours(Float totalPlanCreditHours) {
+		this.totalPlanCreditHours = totalPlanCreditHours;
+	}
+	public List<TermCourses<T, TO>> getTermCourses() {
+		return termCourses;
+	}
+	public void setTermCourses(List<TermCourses<T, TO>> termCourses) {
+		this.termCourses = termCourses;
+	}
+	public String getInstitutionName() {
+		return institutionName;
+	}
+	public void setInstitutionName(String institutionName) {
+		this.institutionName = institutionName;
+	}
+	public UUID getMessageTemplateId() {
+		return messageTemplateId;
+	}
+	public void setMessageTemplateId(UUID messageTemplateId) {
+		this.messageTemplateId = messageTemplateId;
+	}
+	public Person getOwner() {
+		return owner;
+	}
+	public void setOwner(Person owner) {
+		this.owner = owner;
+	}
+	public Person getStudent() {
+		return student;
+	}
+	public void setStudent(Person student) {
+		this.student = student;
+	}
+	
+}
diff --git a/src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanPrintParams.java b/src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanPrintParams.java
new file mode 100644
index 0000000..2321ea5
--- /dev/null
+++ b/src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanPrintParams.java
@@ -0,0 +1,11 @@
+package org.jasig.ssp.transferobject.reference;
+
+import org.jasig.ssp.model.Plan;
+import org.jasig.ssp.transferobject.PlanOutputTO;
+import org.jasig.ssp.transferobject.PlanTO; 
+
+public class MessageTemplatePlanPrintParams extends
+		AbstractMessageTemplateMapPrintParamsTO<PlanOutputTO, Plan, PlanTO> {
+
+	
+}
diff --git a/src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanTemplatePrintParamsTO.java b/src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanTemplatePrintParamsTO.java
new file mode 100644
index 0000000..145f639
--- /dev/null
+++ b/src/main/java/org/jasig/ssp/transferobject/reference/MessageTemplatePlanTemplatePrintParamsTO.java
@@ -0,0 +1,42 @@
+package org.jasig.ssp.transferobject.reference;
+
+import org.jasig.ssp.model.Template;
+import org.jasig.ssp.transferobject.TemplateOutputTO;
+import org.jasig.ssp.transferobject.TemplateTO;
+
+public class MessageTemplatePlanTemplatePrintParamsTO extends
+		AbstractMessageTemplateMapPrintParamsTO<TemplateOutputTO, Template, TemplateTO> {
+
+	// Added from Message Templates
+	private String programName;
+	
+	// Added from Message Templates
+	private String divisionName;
+	
+	// Added from Message Templates
+	private String departmentName;
+	
+	public String getProgramName() {
+		return programName;
+	}
+
+	public void setProgramName(String programName) {
+		this.programName = programName;
+	}
+
+	public String getDivisionName() {
+		return divisionName;
+	}
+
+	public void setDivisionName(String divisionName) {
+		this.divisionName = divisionName;
+	}
+
+	public String getDepartmentName() {
+		return departmentName;
+	}
+
+	public void setDepartmentName(String departmentName) {
+		this.departmentName = departmentName;
+	}
+}
diff --git a/src/main/java/org/jasig/ssp/web/api/PlanController.java b/src/main/java/org/jasig/ssp/web/api/PlanController.java
index 90178e5..5f7ee45 100644
--- a/src/main/java/org/jasig/ssp/web/api/PlanController.java
+++ b/src/main/java/org/jasig/ssp/web/api/PlanController.java
@@ -39,6 +39,7 @@ import org.jasig.ssp.model.Plan;
 import org.jasig.ssp.model.SubjectAndBody;
 import org.jasig.ssp.model.external.ExternalPersonPlanStatus;
 import org.jasig.ssp.model.reference.Config;
+import org.jasig.ssp.model.reference.MessageTemplate;
 import org.jasig.ssp.security.SspUser;
 import org.jasig.ssp.security.permissions.Permission;
 import org.jasig.ssp.service.MessageService;
@@ -289,7 +290,7 @@ public class PlanController  extends AbstractBaseController {
 	public @ResponseBody
 	String print(final HttpServletResponse response,
 			 @RequestBody final PlanOutputTO planOutputDataTO) throws ObjectNotFoundException {
-
+		
 		SubjectAndBody message = service.createOutput(planOutputDataTO);
 		if(message != null)
 			return message.getBody();
@@ -307,6 +308,7 @@ public class PlanController  extends AbstractBaseController {
 		Plan currentPlan = service.getCurrentForStudent(personId);
 		PlanTO planTO = getFactory().from(currentPlan);
 		planOutputDataTO.setPlan(planTO);
+		
 		SubjectAndBody message = service.createOutput(planOutputDataTO);
 		if(message != null)
 			return message.getBody();
@@ -364,6 +366,8 @@ public class PlanController  extends AbstractBaseController {
 	public @ResponseBody
 	String email(final HttpServletResponse response,
 			 @RequestBody final PlanOutputTO planOutputDataTO) throws ObjectNotFoundException {
+		
+		
 		SubjectAndBody messageText = service.createOutput(planOutputDataTO);
 		if(messageText == null)
 			return null;
diff --git a/src/main/java/org/jasig/ssp/web/api/TemplateController.java b/src/main/java/org/jasig/ssp/web/api/TemplateController.java
index 9ebd360..ce4f896 100644
--- a/src/main/java/org/jasig/ssp/web/api/TemplateController.java
+++ b/src/main/java/org/jasig/ssp/web/api/TemplateController.java
@@ -279,7 +279,7 @@ public class TemplateController  extends AbstractBaseController {
 	String print(final HttpServletResponse response,
 			 @RequestBody final TemplateOutputTO planOutputDataTO) throws ObjectNotFoundException {
 
-		SubjectAndBody message = getService().createMatrixOutput(planOutputDataTO.getPlan());
+		SubjectAndBody message = getService().createOutput(planOutputDataTO);
 		if(message != null)
 			return message.getBody();
 		
@@ -304,6 +304,7 @@ public class TemplateController  extends AbstractBaseController {
 	public @ResponseBody
 	String email(final HttpServletResponse response,
 			 @RequestBody final TemplateOutputTO planOutputDataTO) throws ObjectNotFoundException {
+		
 		SubjectAndBody messageText = getService().createOutput(planOutputDataTO);
 		if(messageText == null)
 			return null;
diff --git a/src/main/resources/org/jasig/ssp/database/changesets/000083.xml b/src/main/resources/org/jasig/ssp/database/changesets/000083.xml
new file mode 100644
index 0000000..ec15dc9
--- /dev/null
+++ b/src/main/resources/org/jasig/ssp/database/changesets/000083.xml
@@ -0,0 +1,143 @@
+<!--
+
+    Licensed to Jasig under one or more contributor license
+    agreements. See the NOTICE file distributed with this work
+    for additional information regarding copyright ownership.
+    Jasig licenses this file to you under the Apache License,
+    Version 2.0 (the "License"); you may not use this file
+    except in compliance with the License. You may obtain a
+    copy of the License at:
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+    Unless required by applicable law or agreed to in writing,
+    software distributed under the License is distributed on
+    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+    KIND, either express or implied. See the License for the
+    specific language governing permissions and limitations
+    under the License.
+
+-->
+<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
+		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
+
+	<changeSet id="Add map print template" author="jim.stanley">
+		<insert tableName="message_template">
+			<column name="id" value="bcc180b0-3a8b-11e3-aa6e-0800200c9a66" />
+			<column name="name" value="Template Plan Printout" />
+			<column name="description" value="Template Plan Printout" />
+			<column name="subject" value="Template Plan" />
+			<column name="body" ><![CDATA[<div>
+
+<p text-align="center" style="padding-left:10%">
+<table style="width:80%" ><tbody>
+<tr>
+<td style="text-align:left;width:30%" ></td>
+<td style="text-align:center;width:30%;font-size:large" ><b>$!title</b></td>
+<td style="text-align:right;width:30%;font-size:small" >Last Modified: $!lastModified</td>
+</tr>
+<tr>
+<td style="text-align:left;font-size:small" >#if($!printParams.divisionName)Division: $!printParams.divisionName#end</td>
+<td style="text-align:center;font-size:small" >#if($!printParams.departmentName)Department: $!printParams.departmentName#end</td>
+<td style="text-align:right;font-size:small" >#if($!printParams.programName)Program: $!printParams.programName#end</td>
+</tr>
+</tbody></table>
+<b>
+</p>
+</div>
+<div style="position:relative;left:100px">
+	#foreach($termCourse in $termCourses) 
+		<table cellpadding="0" cellspacing="0" style="background-color:white;width:80%;border-collapse:collapse;">
+			<caption  style="font-size:small;text-align:left">$termCourse.term.name #if($!termCourse.studentNotes) - $!termCourse.studentNotes#end</caption>
+			<thead>
+				<tr >
+					<th style="text-align:center;border:1px solid black;width:15%">
+						Course<br/>Number
+					</th>
+					<th style="text-align:center;border:1px solid black;width:50%">
+						Course Title
+					</th>
+					<th style="text-align:center;border:1px solid black;width:15%">
+						Credit <br/> Hours
+					</th>
+					<th style="text-align:center;border:1px solid black;width:25%">
+						Notes <b>(Student)</b> <br/> 
+					</th>
+				</tr>
+			</thead>
+			#foreach($course in $!termCourse.courses)
+			<tr>
+				<td style="text-align:center;border:1px solid black;width:15%;padding-bottom:5px; padding-top:5px;padding-left:5px">
+					$!course.formattedCourse
+				</td>
+				<td style="text-align:left;border:1px solid black;width:50%;padding-bottom:5px; padding-top:5px;padding-left:5px">
+					$!course.courseTitle
+				</td>
+				<td style="text-align:center;border:1px solid black;width:15%;padding-bottom:5px; padding-top:5px;padding-left:5px">
+					$!course.creditHours
+				</td>
+				<td style="text-align:center;border:1px solid black;width:25%;padding-bottom:5px; padding-top:5px;padding-left:5px">
+					$!course.studentNotes
+				</td>
+			</tr>
+			<tr>
+			#end
+			<tr>
+			<td colspan="3" style="height:35px; padding-bottom:5px; padding-left:80px;vertical-align:bottom">
+			 	<b>Total Credit Hours:</b>  $!termCourse.totalCreditHours
+			</td>
+			</tr>
+			<tr>
+			<td colspan="3" style="height:15px">
+			<br/>
+			</td>
+			</tr>
+		</table>
+	#end
+	<table style="width:80%">
+		<tbody>
+		#if($!planStudentNotes)
+		<tr>
+		<td style="text-align:left">
+		   Notes:
+		</td>
+		</tr>
+		<tr>
+		<td style="text-align:left;padding-left10px;">
+		   $!planStudentNotes
+		</td>
+		</tr>
+		#end
+		<tr>
+		<td style="text-align:center">
+		<b>Total Template Hours: $!totalPlanHours</b>
+		</td>
+		</tr>
+		</tbody>
+	</table>
+</div>
+	<div>
+	<p style="padding-left:20px">
+	For questions, contact:</br>
+	<b>&#160;&#160;&#160;$!coachFullName</br>
+	&#160;&#160;&#160;$!coachPhone2</br>
+	&#160;&#160;&#160;$!coachEmail</br>
+	</p>
+	</div>
+	]]></column>
+			<column name="created_date" valueDate="2013-04-23T10:00:00" />
+			<column name="modified_date" valueDate="2012-04-23T10:00:00" />
+			<column name="created_by" value="58ba5ee3-734e-4ae9-b9c5-943774b4de41" />
+			<column name="modified_by" value="58ba5ee3-734e-4ae9-b9c5-943774b4de41" />
+			<column name="object_status" value="1" />
+		</insert>
+
+		<rollback>
+			<delete tableName="message_template">
+				<where>id = 'bcc180b0-3a8b-11e3-aa6e-0800200c9a66'</where>
+			</delete>
+		</rollback>
+	</changeSet>
+</databaseChangeLog>
\ No newline at end of file
diff --git a/src/main/resources/org/jasig/ssp/database/masterChangeLog.xml b/src/main/resources/org/jasig/ssp/database/masterChangeLog.xml
index 2fa5158..fdb3dfb 100644
--- a/src/main/resources/org/jasig/ssp/database/masterChangeLog.xml
+++ b/src/main/resources/org/jasig/ssp/database/masterChangeLog.xml
@@ -179,4 +179,5 @@
 	<include file="org/jasig/ssp/database/integrationchangesets/i000050.xml" /> 
 	<include file="org/jasig/ssp/database/changesets/000078.xml" />
 	<include file="org/jasig/ssp/database/changesets/000082.xml" />
+	<include file="org/jasig/ssp/database/changesets/000083.xml" />
 </databaseChangeLog>
diff --git a/src/main/webapp/app/controller/tool/map/SemesterPanelContainerViewController.js b/src/main/webapp/app/controller/tool/map/SemesterPanelContainerViewController.js
index e2efc9f..4a551f7 100644
--- a/src/main/webapp/app/controller/tool/map/SemesterPanelContainerViewController.js
+++ b/src/main/webapp/app/controller/tool/map/SemesterPanelContainerViewController.js
@@ -560,15 +560,19 @@ Ext.define('Ssp.controller.tool.map.SemesterPanelContainerViewController', {
 				show: true
             }
 		var metaData = new Ssp.model.tool.map.PlanOutputData();
-		metaData.set('outputFormat', 'fullFormat');
+		
 		metaData.set('includeCourseDescription', true);
 		metaData.set('includeHeaderFooter', true);
 		metaData.set('includeTotalTimeExpected', true);
 		metaData.set('includeFinancialAidInformation', true);
 		
 		var planType = "plan";
-		if(me.currentMapPlan.get("isTemplate") == true)
+		if(me.currentMapPlan.get("isTemplate") == true){
 			planType = "template";
+			metaData.set('outputFormat', 'matrixFormat');
+		}else{
+			metaData.set('outputFormat', 'fullFormat');
+		}
 			
 		me.mapPlanService.print(me.semesterStores, 
 			metaData,
diff --git a/src/main/webapp/app/service/MapPlanService.js b/src/main/webapp/app/service/MapPlanService.js
index 3cd2fb9..a4450b2 100644
--- a/src/main/webapp/app/service/MapPlanService.js
+++ b/src/main/webapp/app/service/MapPlanService.js
@@ -394,7 +394,7 @@ Ext.define('Ssp.service.MapPlanService', {
 			});
 		}
 	    me.updateCurrentMap(semesterStores);
-	    outputData.set("plan",me.currentMapPlan.getSimpleJsonData());
+	    outputData.set("plan", me.currentMapPlan.getSimpleJsonData());
 	    outputData.set("isPrivate",isPrivate);
     }
     	
diff --git a/src/test/java/org/jasig/ssp/service/impl/PlanServiceTest.java b/src/test/java/org/jasig/ssp/service/impl/PlanServiceTest.java
index a73c669..768a218 100644
--- a/src/test/java/org/jasig/ssp/service/impl/PlanServiceTest.java
+++ b/src/test/java/org/jasig/ssp/service/impl/PlanServiceTest.java
@@ -39,6 +39,7 @@ import org.jasig.ssp.model.Plan;
 import org.jasig.ssp.model.PlanCourse;
 import org.jasig.ssp.model.SubjectAndBody;
 import org.jasig.ssp.model.external.Term;
+import org.jasig.ssp.model.reference.MessageTemplate;
 import org.jasig.ssp.service.ObjectNotFoundException;
 import org.jasig.ssp.service.PersonService;
 import org.jasig.ssp.service.external.TermService;
@@ -176,7 +177,7 @@ public class PlanServiceTest {
 		}
 		
 
-		final SubjectAndBody messageText = service.createMatrixOutput(plan);
+		final SubjectAndBody messageText = service.createMatrixOutput(plan, MessageTemplate.OUTPUT_MAP_PLAN_MATRIX_ID);
 		assertNotNull("Save() result should not have been null.", messageText);
 
 	}
-- 
1.7.11.1

