#
# Licensed to Apereo under one or more contributor license
# agreements. See the NOTICE file distributed with this work
# for additional information regarding copyright ownership.
# Apereo licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file
# except in compliance with the License.  You may obtain a
# copy of the License at the following location:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# CoffeeScript build file for MyGPS

# This **only** works with Node.js v0.8.16, CoffeeScript v1.4.0, and Closure
# Compiler 121212. Otherwise will run into any number of problems, ranging from
# unexpected file ordering to significantly different compiler output to
# outright compilation failure.
#
# To install these libraries:
#
#  - Node: Download and install platform-specific package from:
#
#        http://nodejs.org/dist/v0.8.16/
#
#      If you need to uninstall a previous, global installation, this
#      script works (tested on OSX Mountain Lion to uninstall 0.10.5):
#
#        https://raw.github.com/gist/2697848/uninstall-node.sh
#
#      That script was originally found here:
#
#        http://stackoverflow.com/questions/9044788/how-do-i-uninstall-nodejs-installed-from-pkg-mac-os-x
#
#  - CoffeeScript: Simplest is to just install it via npm ("Node Package
#      Manager"). Assuming a global install:
#
#        %> sudo npm install -g coffee-script@1.4.0
#
#      To uninstall a previous, global version:
#
#        %> sudo npm uninstall -g coffee-script
#
#      Verify install. Should look like:
#
#        %> node --version
#        v0.8.16
#        %> coffee --version
#        CoffeeScript version 1.4.0
#
#  - Closure Compiler: You'll need the "121212" release. Download from:
#
#      https://code.google.com/p/closure-compiler/downloads/list
#
#    Verify install. Should look like:
#
#        %> $ java -jar /path/to/your/closure/compiler.jar --version
#        Closure Compiler (http://code.google.com/closure/compiler)
#        Version: 20121212 (revision 2388)
#        Built on: 2012/12/12 17:42
#
#
# Then copy this file to some path outside the source control tree, edit the
# below variables with the correct paths for your environment, and run it
# manually any time any *.coffee file is updated.
#
# To run this build file change your working directory to the location of this
# (copied) file and run:
#
#  %> cake build
#
# It's a good idea to make sure you can reproduce the current compiled output
# with that command before making any changes to *.coffee source files.
#
# Before you check anything in, re-apply the JASIG license headers:
#
#  %> mvn license:format
#
# Windows? Yeah, you're on you're own...


# Version number to append to the compiled MyGPS.js file.
# If this version is changed, manually update the <SCRIPT> links in the /src/main/webapp/*.html files.
VERSION  = "2.1.0"

# Full path to CoffeeScript source files for MyGPS
# On Linux, for example, /usr/me/projects/ssp/src/main/coffee/mygps
# On Windows, for example, C:/java/projects/ssp/src/main/coffee/mygps
SRC_MAIN_COFFEE_PATH = "C:/java/projects/ssp/src/main/coffee/mygps"

# Full path to /src/main/webapp/scripts where the compiled MyGPS.js file should be placed.
# On Linux, for example, /usr/me/projects/MyGPS/src/main/webapp/MyGPS/scripts
# On Windows, for example, C:/java/projects/MyGPS/src/main/webapp/MyGPS/scripts
OUTPUT_PATH = "C:/java/projects/ssp/src/main/webapp/MyGPS/scripts"

# Full path, including filename and extension, to the location of the Closure Compiler JAR file.
# On Linux, for example, /usr/share/compiler/compiler.jar
# On Windows, for example, C:/java/projects/compiler.jar
CLOSURE_PATH = "C:/java/projects/closure-compiler.jar"



# The below code should _not_ need changed per environment.

PRODUCT  = "MyGPS"
FILENAME = "#{ PRODUCT }-#{ VERSION }"

{ exec } = require 'child_process'

task "build", "Builds #{ PRODUCT } JavaScript (and minified JavaScript) implementation from CoffeeScript source code. Make sure this file is copied and paths are edited for your environment.", ->
	console.log "Building #{ PRODUCT } version #{ VERSION }"
	console.log "Compiling #{ SRC_MAIN_COFFEE_PATH }/ to \"#{ OUTPUT_PATH }/ and #{ FILENAME }.js\""
	exec "coffee --output \"#{ OUTPUT_PATH }\" --compile #{ SRC_MAIN_COFFEE_PATH }/", ( error, stdout, stderr ) ->
	exec "coffee --join \"#{ FILENAME }.js\" --output \"#{ OUTPUT_PATH }\" --compile #{ SRC_MAIN_COFFEE_PATH }/mygps/enumeration/ #{ SRC_MAIN_COFFEE_PATH }/mygps/model/ #{ SRC_MAIN_COFFEE_PATH }/mygps/session/ #{ SRC_MAIN_COFFEE_PATH }/mygps/service/ #{ SRC_MAIN_COFFEE_PATH }/mygps/viewmodel/", ( error, stdout, stderr ) ->
		console.log stdout + stderr if stdout or stderr
		if error
			throw error
		else

			console.log "Minifying \"#{ OUTPUT_PATH }/#{ FILENAME }.js\" to \"#{ OUTPUT_PATH }/#{ FILENAME }.min.js\""
			console.log "closure --js \"#{ OUTPUT_PATH }/#{ FILENAME }.js\" --js_output_file \"#{ OUTPUT_PATH }/#{ FILENAME }.min.js\""
			exec "java -jar #{ CLOSURE_PATH } --js \"#{ OUTPUT_PATH }/#{ FILENAME }.js\" --js_output_file \"#{ OUTPUT_PATH }/#{ FILENAME }.min.js\"", ( error, stdout, stderr ) ->
				console.log stdout + stderr if stdout or stderr
				throw error if error
