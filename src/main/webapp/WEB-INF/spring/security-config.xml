<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/util	  http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/security/oauth2	http://www.springframework.org/schema/security/spring-security-oauth2.xsd">

	<beans:import resource="uportal/security-config-uportal.xml"/>
	<beans:import resource="local/ssp-sec-local.xml"/>
	<beans:import resource="config-props.xml" />

	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/api/oauth/token" create-session="stateless" authentication-manager-ref="oauth2ClientAuthenticationManager">
		<intercept-url pattern="/api/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<anonymous enabled="false" />
		<http-basic entry-point-ref="oauth2ClientAuthenticationEntryPoint" />
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>

	<http pattern="/api/1/**" create-session="never" entry-point-ref="oauth2AuthenticationEntryPoint">
		<!-- FIGURE OUT IF WE STILL NEED THIS FIXATION PROTECTION DISABLEMENT... IT WAS ADDED FOR 1ST TIME LOGINS -->
		<!--<session-management session-fixation-protection="none" />-->
		<custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER" />
		<custom-filter ref="uPortalFilter" position="PRE_AUTH_FILTER"/>
		<access-denied-handler ref="oauth2AccessDeniedHandler" />
	</http>

	<!-- NEED TO ADD SOMETHING BACK FOR FORM LOGIN AND LOGOUT IN STANDALONE MODE -->

	<oauth:resource-server id="resourceServerFilter" resource-id="ssp" token-services-ref="oauth2TokenServices" />

	<authentication-manager id="oauth2ClientAuthenticationManager">
		<authentication-provider user-service-ref="oauth2ClientDetailsUserService" />
	</authentication-manager>

	<beans:bean id="oauth2ClientAuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="realmName" value="ssp/client" />
		<beans:property name="typeName" value="Basic" />
	</beans:bean>

	<beans:bean id="oauth2AuthenticationEntryPoint" class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<beans:property name="realmName" value="ssp/client" />
	</beans:bean>

	<beans:bean id="oauth2AccessDeniedHandler" class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler" />

	<beans:bean name="uPortalFilter" class="org.jasig.ssp.security.uportal.UPortalPreAuthenticatedProcessingFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
	</beans:bean>

	<beans:bean name="requestCleanupServletFilter" class=" org.jasig.ssp.security.RequestCleanupServletFilter" />

	<beans:bean id="oauth2ClientDetailsUserService" class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<beans:constructor-arg ref="oauth2ClientDetailsService" />
	</beans:bean>

	<oauth:client-details-service id="oauth2ClientDetailsService">
		<oauth:client client-id="my-client-with-secret" authorized-grant-types="client_credentials" secret="secret" authorities="ROLE_PERSON_READ" />
	</oauth:client-details-service>

	<beans:bean id="oauth2TokenStore" class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

	<beans:bean id="oauth2TokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<beans:property name="tokenStore" ref="oauth2TokenStore" />
		<beans:property name="supportRefreshToken" value="false" />
		<beans:property name="clientDetailsService" ref="oauth2ClientDetailsService" />
	</beans:bean>

</beans:beans>