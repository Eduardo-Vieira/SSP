<?xml version="1.0" encoding="UTF-8"?>

<!-- This is a custom security configuration that can be used in dev environments.
It allows ssp to be run outside in absence of uportal.
-->

<beans:beans 
	profile="dev-standalone"
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/util		
		http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<!-- Properties file configuration of existing beans -->
	<util:properties id="configProperties" location="file:${SSP_CONFIGDIR}/ssp-config.properties"/>
	
	<!-- Interesting kludge to get the ldap-server element to read the config directory -->
	<beans:bean id="configDir" class="org.springframework.util.SystemPropertyUtils" factory-method="resolvePlaceholders">
		<beans:constructor-arg value="${SSP_CONFIGDIR}" /> 
	</beans:bean>

	<ldap-server ldif="file:#{configDir}/users.ldif" root="dc=springframework,dc=org"/>

	<authentication-manager alias="authenticationManager">
		<ldap-authentication-provider
			user-search-filter="(cn={0})" 
			user-search-base="ou=users"
			group-search-filter="(uniqueMember={0})" 
			group-search-base="ou=groups"
			group-role-attribute="cn" 
			role-prefix="ROLE_" 
			user-context-mapper-ref="userDetailsService">
		</ldap-authentication-provider>
	</authentication-manager>

</beans:beans>
