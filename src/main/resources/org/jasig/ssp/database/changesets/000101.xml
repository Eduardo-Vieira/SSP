<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
    <property name="schema" value="${database.schema}" />
    <property name="nvarchar.type" value="character varying" dbms="postgresql" />
    <property name="nvarchar.type" value="nvarchar" dbms="mssql" />
    <property name="trim.function.prefix" value="btrim(" dbms="postgresql" />
    <property name="trim.function.suffix" value=")" dbms="postgresql" />
    <property name="trim.function.prefix" value="rtrim(ltrim(" dbms="mssql" />
    <property name="trim.function.suffix" value="))" dbms="mssql" />


    <changeSet id="set value on coachSetFromExternalData if not set" author="dan.mccallum">
        <preConditions onFail="CONTINUE" onFailMessage="Skipping set value on coachSetFromExternalData if not set">
            <!-- SQL condition here tries to mimic the logic in ConfigServiceImpl.getByNameNullOrDefaultValue(),
            which falls back to default_value if value is null or trims to the empty string -->
            <sqlCheck expectedResult="1">
                select count(id) from config where name = 'coachSetFromExternalData' and
                  (value is null or ${trim.function.prefix}value${trim.function.suffix} = '')
            </sqlCheck>
        </preConditions>
        <update tableName="config">
            <column name="value" valueComputed="default_value" />
            <where>name = 'coachSetFromExternalData'</where>
        </update>
    </changeSet>

</databaseChangeLog>