<!--

    Licensed to Apereo under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Apereo licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License.  You may obtain a
    copy of the License at the following location:

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
				   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
		http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <property name="schema" value="${database.schema}" />
    <property name="nvarchar.type" value="character varying" dbms="postgresql" />
    <property name="nvarchar.type" value="nvarchar" dbms="mssql" />
    <property name="check_for_manage_integration_database_config_sql"
              value="select count(id) from config where name='manage_integration_database'" />
    <property name="should_manage_integration_database_sql"
              value="select case lower(value) when 'true' then 'true' else 'false' end as value from config where name='manage_integration_database'" />

    <changeSet id="Drop v_external_student_transcript" author="paul.spaude">
        <preConditions onFail="CONTINUE"
                       onFailMessage="Skip Drop v_external_student_transcript">
            <sqlCheck expectedResult="1">${check_for_manage_integration_database_config_sql}
            </sqlCheck>
            <sqlCheck expectedResult="true">${should_manage_integration_database_sql}
            </sqlCheck>
        </preConditions>
        <dropView viewName="v_external_student_transcript" />
    </changeSet>

    <changeSet id="Add gpa columns to external_student_transcript" author="paul.spaude">
        <preConditions onFail="CONTINUE"
                       onFailMessage="Skip Add gpa columns to  external_student_transcript">
            <sqlCheck expectedResult="1">${check_for_manage_integration_database_config_sql}
            </sqlCheck>
            <sqlCheck expectedResult="true">${should_manage_integration_database_sql}
            </sqlCheck>
        </preConditions>
        <addColumn tableName="external_student_transcript">
            <column name="local_gpa" type="decimal(9,2)" >
                <constraints nullable="true" />
            </column>   
        </addColumn>
        <addColumn tableName="external_student_transcript">
            <column name="program_gpa" type="decimal(9,2)" >
                <constraints nullable="true" />
            </column>   
        </addColumn>
    </changeSet>

    <!-- Drop view if it was created in non-PK mode but was switched to PK mode. Historically we allow you
     to change config in PK direction but not back -->
    <changeSet id="Drop v_external_student_transcript view (pk)" author="paul.spaude">
        <preConditions onFail="CONTINUE" onFailMessage="Skip Drop v_external_student_transcript view (pk)">
            <sqlCheck expectedResult="1">${check_for_manage_integration_database_config_sql}
            </sqlCheck>
            <sqlCheck expectedResult="true">${should_manage_integration_database_sql}</sqlCheck>
            <changeLogPropertyDefined property="external.apply.natural.keys" value="true"/>
            <viewExists viewName="v_external_student_transcript" schemaName="${schema}" />
            <changeSetExecuted id="add back v_external_student_transcript view (no-pk)"
                               author="paul.spaude" changeLogFile="org/jasig/ssp/database/integrationchangesets/i000065.xml" />
            <not>
                <!-- If you were in PK mode, then non-PK mode, then flip back to PK mode, the <changeSetExecuted> above would
                be true, but if we delete the view again because of that, the view won't be recreated b/c view recreation
                changesets would have already run.

                B/c of the nature of Liquibase we just can't support this endless flipping back and forth.
                The primary use case we want to support is starting in non-PK mode then flipping to PK mode. That said, we don't
                want to completely cripple the application if you do flip back and forth. So for the PK to non-PK to PK use
                case here you'll just end up with the external_student_transcript table/view stuck in non-PK mode and
                you'll have to fix it manually if you really do want PK mode. -->
                <changeSetExecuted id="Add back v_external_student_transcript view (pk)"
                                   author="paul.spaude" changeLogFile="org/jasig/ssp/database/integrationchangesets/i000065.xml" />
            </not>
        </preConditions>
        <dropView viewName="v_external_student_transcript" />
    </changeSet>

    <changeSet id="Add back v_external_student_transcript view (pk)" author="paul.spaude">
        <preConditions onFail="CONTINUE" onFailMessage="Skipping Add back v_external_student_transcript view (pk)">
            <sqlCheck expectedResult="1">${check_for_manage_integration_database_config_sql}
            </sqlCheck>
            <sqlCheck expectedResult="true">${should_manage_integration_database_sql}</sqlCheck>
            <changeLogPropertyDefined property="external.apply.natural.keys" value="true"/>
        </preConditions>
        <createView viewName="v_external_student_transcript">
            select school_id as id,* from external_student_transcript
        </createView>
        <sql>grant all on v_external_student_transcript to ${database.app.username}</sql>
    </changeSet>

    <changeSet id="add back v_external_student_transcript (no-pk)" author="paul.spaude">
        <preConditions onFail="CONTINUE" onFailMessage="Skipping Add back v_external_student_transcript (no-pk)">
            <sqlCheck expectedResult="1">${check_for_manage_integration_database_config_sql}
            </sqlCheck>
            <sqlCheck expectedResult="true">${should_manage_integration_database_sql}</sqlCheck>
            <changeLogPropertyDefined property="external.apply.natural.keys" value="false"/>

            <!-- Without this the app will error out if you begin with PKs enabled then turn them
            off. We just really don't want/need to support that use case in our Liquibase, but still
            don't want to error out.-->
            <not>
                <viewExists viewName="v_external_student_transcript" schemaName="${schema}" />
            </not>
        </preConditions>
        <createView viewName="v_external_student_transcript">
            select ROW_NUMBER() OVER (ORDER BY school_id) as id, * from external_student_transcript
        </createView>
        <sql>grant all on v_external_student_transcript to ${database.app.username}</sql>
    </changeSet>

    <changeSet id="create external_career_decision_status" author="paul.spaude">
        <preConditions onFail="CONTINUE"
                       onFailMessage="Skip adding external_career_decision_status">
            <sqlCheck expectedResult="1">${check_for_manage_integration_database_config_sql}
            </sqlCheck>
            <sqlCheck expectedResult="true">${should_manage_integration_database_sql}
            </sqlCheck>
        </preConditions>

        <createTable tableName="external_career_decision_status">
            <column name="school_id" type="${nvarchar.type}(50)">
                <constraints nullable="false" />
            </column>
            <column name="code" type="${nvarchar.type}(2)">
                <constraints nullable="false" />
            </column>
        </createTable>

        <addPrimaryKey constraintName="external_career_decision_status_pkey" tableName="external_career_decision_status"
                       columnNames="school_id"/>

        <sql>grant all on external_career_decision_status to ${database.app.username}</sql>

        <!-- Not supporting non-PK'd external tables. -->
        <createView viewName="v_external_career_decision_status">
            select school_id as id,* from external_career_decision_status
        </createView>

        <sql>grant all on v_external_career_decision_status to ${database.app.username}</sql>
    </changeSet>

</databaseChangeLog>
