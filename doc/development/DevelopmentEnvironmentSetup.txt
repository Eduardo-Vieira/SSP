How to set up your development environment:

1. Create a base directory for everything. Windows example: C:\java\
2. Create a sub-directory to hold your binaries and tools.
	Windows example: C:\java\bin
3. Install (extract ZIP files to their own directories) the following packages:
	- Maven (apache-maven-3.0.3)
	- Tomcat (apache-tomcat-6.0.35)
		(may soon be replaced by VMware vFabric tc Server (vfabric-tc-server-developer-2.6.3.RELEASE) hopefully)
	- Gradle (gradle-1.0-milestone-8a)
	- Groovy (groovy-1.8.6)
	- SpringSource Tool Suite (sts-2.9.0.RELEASE)
4. Install PostgreSQL 9.1 or newer (http://www.postgresql.org/download/)
5. Setup a PostgreSQL database
	- Launch the newly installed pgAdmin application.
	- In the Object Browser, navigate to and right click on 
		"Server Groups->Servers->PostgreSQL 9.1 (localhost:5432)". (The last 
		item may be different depending on the settings you made during 
		installation.)
	- In the pop-up context menu, click "Connect"
	- Right click on "Login Roles" and click "New Login Role..."
	- In the Properties tab, enter a Role name of "sspadmin".
	- In the Definition tab, enter a Password of "sspadmin" (no quotes).
	- Click Ok.
	- Repeat the last three steps again, but use "ssp" instead of "sspadmin".
	- Check that the new "sspadmin" and "ssp" roles exist in the Login Roles
		section of the Object browser.
	- Back in the Object right-click on "Databases" and click "New database...".
	- Enter a Name of "ssp", Owner of "sspadmin", and click Ok.
	- You may now exist pgAdmin.
6. Download and install the latest version of Sun Java JDK 6.
7. Create a project files directory. Windows example: C:\java\projects
8. Setup environment variables pointing to the appropriate locations where they
	were installed. The below use Windows environment path examples, but the
	environment variable names match exactly:
	- GRADLE_HOME=C:\java\bin\gradle-1.0-milestone-8a
	- GROOVY_HOME=C:\java\bin\groovy-1.8.6
	- JAVA_HOME=C:\Program Files\Java\jdk1.6.0_31
	- MAVEN_HOME=C:\java\bin\apache-maven-3.0.3
	- SSP_TESTCONFIGDIR=C:\java\projects\ssp\src\test\resources\
		This will point to wherever your projects directory and SVN checkouts
		were placed. You may need to alter the "C:\java\projects\ssp" part, but
		the "src\test\resources\" is relative to the SVN root of the project.
		Make sure to include the trailing directory separator!
	- Append the following to your system PATH environment variable:
		- %GRADLE_HOME%\bin
		- %MAVEN_HOME%\bin
		- %GROOVY_HOME%\bin
		- %JAVA_HOME%\bin
9. Setup your editing and testing environment in SpringSource Tool Suite:
	- Launch sts.exe from your SpringSource Tool Suite directory.
		Windows example: C:\java\bin\sts-2.9.0.RELEASE\STS.exe
	- Confirm that in the Package Explorer (Window->Show View->Package Explorer)
		lists "Apache Tomcat v6.0" or similar in "Servers". If not, add it
		pointing to your Tomcat installation directory.
	- Install required extensions:
		- Once the application launches, from the Dashboard view (if not 
			showing already, the Dashboard may be accessed via Help->Dashboard) 
			click the Extensions tab at the bottom of the Dashboard view.
		- Mark with a checkmark the following extensions:
			- Gradle Support
			- Groovy Eclipse
			- Subclipse
		- Click the Install button in the lower right. Accept any dialog boxes
			that are shown.
	- Setup project and SVN checkout directory
		- File->New->Project...
		- Search for "SVN" and select "Checkout projects from SVN".
		- Click Next until you get to the "Location" box and enter the URL:
			https://studentzen.svn.cvsdude.com/sspopensource
		- Enter your SVN credentials. Once connected, select SSP->trunk from SVN.
		- Follow the rest of the prompts as you see fit.
	- (Don't forget to update the SSP_TESTCONFIGDIR environment variable if the
		path you chose for the project checkout from SVN differs from what you
		set it to before.)
10. Setup local configuration files
	- Symbolically link, or copy (and manually watch for changes) to the files
		in /externalConfig. Your local versions need modified appropriately for
		your environment. The local versions should be stored at 
		[ TODO: INSERT DIRECTORY HERE ]

Build server:
The build server automatically pulls in SVN commits and runs unit tests.

- To view build server status and history, go to
	https://107.21.202.155/jenkins/job/SSP/
- Use the username and password combo:
	infinum
	T93Xmhs6
- If you wish to be notified of build failures via e-mail, add your e-mail
	address to the notification list at Configure->Build Settings->E-mail
	Notifications->Recipients


Additional tasks:
	- To view/edit some of the documentation in the SVN /doc directory, install
		the following applications:
		- ObjectAid: http://www.objectaid.com/installation
		- FreeMind